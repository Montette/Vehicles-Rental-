{"version":3,"sources":["js/classes/vehicle.js","js/classes/car.js","js/classes/drone.js","js/fleet-data.js","js/services/data-error.js","js/services/fleet-data-service.js","js/app.js"],"names":["Vehicle","constructor","license","model","latLong","TypeError","Car","make","miles","Drone","base","airTimeHours","getData","fetch","then","response","ok","json","Error","catch","err","console","log","DataError","message","data","FleetDataService","cars","drones","errors","loadData","forEach","item","type","validateDroneData","drone","loadDrone","push","e","validateCarData","car","loadCar","requiredProps","split","isValid","prop","Number","isNaN","parseFloat","getCarByLicense","filter","dataService","vehiclesData","request","myCar"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,MAAMA,OAAN,CAAc;AACjBC,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AACjC,QAAG,KAAKH,WAAL,KAAqBD,OAAxB,EAAiC;AAC7B,YAAM,IAAIK,SAAJ,CAAc,yDAAd,CAAN;AACH;;AAAA;AACD,SAAKH,OAAL,GAAeA,OAAf;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;AARgB;;;;;;;;;;;ACArB;;AAEO,MAAME,GAAN,SAAkBN,gBAAlB,CAA0B;AAC7BC,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,OAAjB,EAAyB;AAChC,UAAMF,OAAN,EAAeC,KAAf,EAAsBC,OAAtB;AACA,SAAKG,IAAL,GAAY,IAAZ;AACA,SAAKC,KAAL,GAAa,IAAb;AACH;;AAL4B;;;;;;;;;;;ACFjC;;AAGO,MAAMC,KAAN,SAAoBT,gBAApB,CAA4B;AAC/BC,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,OAAjB,EAAyB;AAChC,UAAMF,OAAN,EAAeC,KAAf,EAAsBC,OAAtB;AACA,SAAKM,IAAL,GAAY,IAAZ;AACA,SAAKC,YAAL,GAAoB,IAApB;AACH;;AAL8B;;;;;;;;;;;ACF5B,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,qDAAD,CAAL,CACxBC,IADwB,CACnBC,QAAQ,IAAI;AACd,MAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZ,WAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,GAFD,MAEO;AACH,UAAM,IAAIC,KAAJ,EAAN;AACH;AACJ,CAPwB,EAQxBC,KARwB,CAQlBC,GAAG,IAAI;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,CAVwB,CAAtB;;;;;;;;;;;ACDA,MAAMG,SAAN,CAAgB;AACnBtB,EAAAA,WAAW,CAACuB,OAAD,EAAUC,IAAV,EAAe;AACtB,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACH;;AAJkB;;;;;;;;;;;ACAvB;;AAGA;;AAIA;;AADA;AAKO,MAAMC,gBAAN,CAAuB;AAC1BzB,EAAAA,WAAW,GAAG;AACV,SAAK0B,IAAL,GAAY,EAAZ;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,MAAL,GAAc,EAAd;AACH;;AAEDC,EAAAA,QAAQ,CAACL,IAAD,EAAO;AACXA,IAAAA,IAAI,CAACM,OAAL,CAAaC,IAAI,IAAI;AACjB,cAAQA,IAAI,CAACC,IAAb;AACI,aAAK,OAAL;AACA,cAAG,KAAKC,iBAAL,CAAuBF,IAAvB,CAAH,EAAgC;AAC5B,kBAAMG,KAAK,GAAG,KAAKC,SAAL,CAAeJ,IAAf,CAAd;AACA,gBAAIG,KAAJ,EAAW,KAAKP,MAAL,CAAYS,IAAZ,CAAiBF,KAAjB;AACd,WAHD,MAGO;AACH,gBAAIG,CAAC,GAAG,IAAIf,oBAAJ,CAAc,oBAAd,EAAoCS,IAApC,CAAR;AACA,iBAAKH,MAAL,CAAYQ,IAAZ,CAAiBC,CAAjB;AACH;;AAEG;;AACJ,aAAK,KAAL;AACA,cAAG,KAAKC,eAAL,CAAqBP,IAArB,CAAH,EAA+B;AAC3B,kBAAMQ,GAAG,GAAG,KAAKC,OAAL,CAAaT,IAAb,CAAZ;AACA,gBAAIQ,GAAJ,EAAS,KAAKb,IAAL,CAAUU,IAAV,CAAeG,GAAf;AACZ,WAHD,MAGO;AACH,gBAAIF,CAAC,GAAG,IAAIf,oBAAJ,CAAc,kBAAd,EAAkCS,IAAlC,CAAR;AACA,iBAAKH,MAAL,CAAYQ,IAAZ,CAAiBC,CAAjB;AACH;;AACG;;AACJ;AACIjB,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,cAAIgB,CAAC,GAAG,IAAIf,oBAAJ,CAAc,uBAAd,EAAuCS,IAAvC,CAAR;AACA,eAAKH,MAAL,CAAYQ,IAAZ,CAAiBC,CAAjB;AACA;AAxBR;AA4BH,KA7BD;;AA8BA,SAAI,IAAIlB,GAAR,IAAe,KAAKS,MAApB,EAA2B;AACvBR,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACI,OAAhB;AACH;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,IAAjB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,MAAjB;AACH;;AAEDa,EAAAA,OAAO,CAAChB,IAAD,EAAO;AACV,QAAI;AACA,YAAM;AACFvB,QAAAA,OADE;AAEFC,QAAAA,KAFE;AAGFC,QAAAA,OAHE;AAIFG,QAAAA,IAJE;AAKFC,QAAAA;AALE,UAMFiB,IANJ;AAOA,YAAMe,GAAG,GAAG,IAAIlC,QAAJ,CAAQJ,OAAR,EAAiBC,KAAjB,EAAwBC,OAAxB,CAAZ;AACAoC,MAAAA,GAAG,CAACjC,IAAJ,GAAWA,IAAX;AACAiC,MAAAA,GAAG,CAAChC,KAAJ,GAAYA,KAAZ;AACA,aAAOgC,GAAP;AACH,KAZD,CAYE,OAAOF,CAAP,EAAU;AACR,WAAKT,MAAL,CAAYQ,IAAZ,CAAiB,IAAId,oBAAJ,CAAc,OAAd,EAAuBE,IAAvB,CAAjB;AACH;;AACD,WAAO,IAAP;AACH;;AAEDW,EAAAA,SAAS,CAACX,IAAD,EAAO;AACZ,QAAI;AACA,YAAM;AACFvB,QAAAA,OADE;AAEFC,QAAAA,KAFE;AAGFC,QAAAA,OAHE;AAIFO,QAAAA,YAJE;AAKFD,QAAAA;AALE,UAMFe,IANJ;AAOA,YAAMU,KAAK,GAAG,IAAI1B,YAAJ,CAAUP,OAAV,EAAmBC,KAAnB,EAA0BC,OAA1B,CAAd;AACA+B,MAAAA,KAAK,CAACxB,YAAN,GAAqBA,YAArB;AACAwB,MAAAA,KAAK,CAACzB,IAAN,GAAaA,IAAb;AACA,aAAOyB,KAAP;AACH,KAZD,CAYE,OAAOG,CAAP,EAAU;AACR,WAAKT,MAAL,CAAYQ,IAAZ,CAAiB,IAAId,oBAAJ,CAAc,OAAd,EAAuBE,IAAvB,CAAjB;AACH;;AACD,WAAO,IAAP;AACH;;AAEDS,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACrB,UAAMO,aAAa,GAAG,0CAA0CC,KAA1C,CAAgD,GAAhD,CAAtB;AACA,QAAIC,OAAO,GAAG,IAAd;AACAF,IAAAA,aAAa,CAACX,OAAd,CAAsBc,IAAI,IAAI;AAC1B,UAAG,CAACV,KAAK,CAACU,IAAD,CAAT,EAAiB;AACb,aAAKhB,MAAL,CAAYQ,IAAZ,CAAiB,IAAId,oBAAJ,CAAe,iBAAgBsB,IAAK,EAApC,EAAuCV,KAAvC,CAAjB;AACCS,QAAAA,OAAO,GAAG,KAAV;AACJ;AACJ,KALD;;AAOA,QAAGE,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACE,UAAP,CAAkBb,KAAK,CAACxB,YAAxB,CAAb,CAAH,EAAwD;AACpD,WAAKkB,MAAL,CAAYQ,IAAZ,CAAiB,IAAId,oBAAJ,CAAe,iBAAgBY,KAAK,CAACxB,YAAa,EAAlD,EAAqDwB,KAArD,CAAjB;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,MAAL,CAAY,CAAZ,EAAeL,OAA3B;AACAoB,MAAAA,OAAO,GAAG,KAAV;AACH;;AACD,WAAOA,OAAP;AACH;;AAEDL,EAAAA,eAAe,CAACC,GAAD,EAAM;AACjB,UAAME,aAAa,GAAG,mCAAmCC,KAAnC,CAAyC,GAAzC,CAAtB;AACA,QAAIC,OAAO,GAAG,IAAd;AACAF,IAAAA,aAAa,CAACX,OAAd,CAAsBc,IAAI,IAAI;AAC1B,UAAG,CAACL,GAAG,CAACK,IAAD,CAAP,EAAe;AACX,aAAKhB,MAAL,CAAYQ,IAAZ,CAAiB,IAAId,oBAAJ,CAAe,iBAAgBsB,IAAK,EAApC,EAAuCL,GAAvC,CAAjB;AACCI,QAAAA,OAAO,GAAG,KAAV;AACJ;AACJ,KALD;;AAOA,QAAGE,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACE,UAAP,CAAkBR,GAAG,CAAChC,KAAtB,CAAb,CAAH,EAA+C;AAC3C,WAAKqB,MAAL,CAAYQ,IAAZ,CAAiB,IAAId,oBAAJ,CAAe,iBAAgBiB,GAAG,CAAChC,KAAM,EAAzC,EAA4CgC,GAA5C,CAAjB;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,MAAL,CAAY,CAAZ,EAAeL,OAA3B;AACAoB,MAAAA,OAAO,GAAG,KAAV;AACH;;AACD,WAAOA,OAAP;AACH;;AAEDK,EAAAA,eAAe,CAAC/C,OAAD,EAAU;AACrB,WAAO,KAAKyB,IAAL,CAAUuB,MAAV,CAAiBV,GAAG,IAAIA,GAAG,CAACtC,OAAJ,KAAgBA,OAAxC,CAAP;AACH;;AAzHyB;;;;;;ACX9B;;AACA;;AACA;;AACA;;AACA,IAAIsC,GAAG,GAAG,IAAIlC,QAAJ,EAAV;AACA,IAAI6B,KAAK,GAAG,IAAI1B,YAAJ,EAAZ;AAEAY,OAAO,CAACC,GAAR,CAAY,MAAZ;AAGA,IAAI6B,WAAW,GAAG,IAAIzB,kCAAJ,EAAlB,EACA;AACA;AACA;AACA;AAEA;;AACA,eAAe0B,YAAf,GAA8B;AAC1B,4BAAUtC,IAAV,CAAeW,IAAI,IAAI0B,WAAW,CAACrB,QAAZ,CAAqBL,IAArB,CAAvB;AACA,QAAM4B,OAAO,GAAG,yBAAhB;AACA,QAAM5B,IAAI,GAAG,MAAM4B,OAAnB;AACAhC,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AAEAJ,EAAAA,OAAO,CAACC,GAAR,CAAY6B,WAAW,CAACxB,IAAxB;AACA,QAAM2B,KAAK,GAAGH,WAAW,CAACF,eAAZ,CAA4B,QAA5B,CAAd;AACA5B,EAAAA,OAAO,CAACC,GAAR,CAAYgC,KAAZ;AAKH;;AAAA;AAEDF,YAAY","file":"app.c3f9f951.map","sourceRoot":"..\\src","sourcesContent":["export class Vehicle {\r\n    constructor(license, model, latLong) {\r\n        if(this.constructor === Vehicle) {\r\n            throw new TypeError(\"Abstract Vehicle class cannot be instantiated directly.\")\r\n        };\r\n        this.license = license;\r\n        this.model = model;\r\n        this.latLong = latLong;\r\n    }\r\n}","import {Vehicle} from './vehicle.js';\r\n\r\nexport class Car extends Vehicle {\r\n    constructor(license, model, latLong){\r\n        super(license, model, latLong);\r\n        this.make = null;\r\n        this.miles = null;\r\n    }\r\n}","import {Vehicle} from './vehicle.js';\r\n\r\n\r\nexport class Drone extends Vehicle {\r\n    constructor(license, model, latLong){\r\n        super(license, model, latLong);\r\n        this.base = null;\r\n        this.airTimeHours = null;\r\n    }\r\n}","\r\nexport const getData = () => fetch('https://vehicles-989f1.firebaseio.com/vehicles.json')\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response.json()\r\n        } else {\r\n            throw new Error();\r\n        }\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n    })","export class DataError {\r\n    constructor(message, data){\r\n        this.message = message;\r\n        this.data = data;\r\n    }\r\n}","import {\r\n    Car\r\n} from '../classes/car.js';\r\nimport {\r\n    Drone\r\n} from '../classes/drone.js';\r\n// import {getData} from '../fleet-data';\r\nimport {\r\n    DataError\r\n} from './data-error.js';\r\n\r\nexport class FleetDataService {\r\n    constructor() {\r\n        this.cars = [];\r\n        this.drones = [];\r\n        this.errors = [];\r\n    }\r\n\r\n    loadData(data) {\r\n        data.forEach(item => {\r\n            switch (item.type) {\r\n                case 'drone':\r\n                if(this.validateDroneData(item)){\r\n                    const drone = this.loadDrone(item);\r\n                    if (drone) this.drones.push(drone);\r\n                } else {\r\n                    let e = new DataError('invalid drone data', item);\r\n                    this.errors.push(e);\r\n                }\r\n                  \r\n                    break;\r\n                case 'car':\r\n                if(this.validateCarData(item)) {\r\n                    const car = this.loadCar(item);\r\n                    if (car) this.cars.push(car);\r\n                } else {\r\n                    let e = new DataError('invalid car data', item);\r\n                    this.errors.push(e);\r\n                }\r\n                    break;\r\n                default:\r\n                    console.log('wrong type of vehicle');\r\n                    let e = new DataError('wrong type of vehicle', item);\r\n                    this.errors.push(e);\r\n                    break;\r\n            }\r\n\r\n       \r\n        });\r\n        for(let err of this.errors){\r\n            console.log(err.message)\r\n        }\r\n        console.log(this.cars);\r\n        console.log(this.drones);\r\n    }\r\n\r\n    loadCar(data) {\r\n        try {\r\n            const {\r\n                license,\r\n                model,\r\n                latLong,\r\n                make,\r\n                miles\r\n            } = data;\r\n            const car = new Car(license, model, latLong);\r\n            car.make = make;\r\n            car.miles = miles;\r\n            return car;\r\n        } catch (e) {\r\n            this.errors.push(new DataError('error', data));\r\n        }\r\n        return null\r\n    }\r\n\r\n    loadDrone(data) {\r\n        try {\r\n            const {\r\n                license,\r\n                model,\r\n                latLong,\r\n                airTimeHours,\r\n                base\r\n            } = data;\r\n            const drone = new Drone(license, model, latLong);\r\n            drone.airTimeHours = airTimeHours;\r\n            drone.base = base;\r\n            return drone;\r\n        } catch (e) {\r\n            this.errors.push(new DataError('error', data));\r\n        }\r\n        return null;\r\n    }\r\n\r\n    validateDroneData(drone) {\r\n        const requiredProps = 'license model latLong base airTimeHours'.split(' ');\r\n        let isValid = true;\r\n        requiredProps.forEach(prop => {\r\n            if(!drone[prop]) {\r\n                this.errors.push(new DataError(`invalid field ${prop}`, drone));\r\n                 isValid = false;\r\n            }\r\n        });\r\n\r\n        if(Number.isNaN(Number.parseFloat(drone.airTimeHours))) {\r\n            this.errors.push(new DataError(`invalid field ${drone.airTimeHours}`, drone));\r\n            console.log(this.errors[0].message);\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validateCarData(car) {\r\n        const requiredProps = 'license model latLong make miles'.split(' ');\r\n        let isValid = true;\r\n        requiredProps.forEach(prop => {\r\n            if(!car[prop]) {\r\n                this.errors.push(new DataError(`invalid field ${prop}`, car));\r\n                 isValid = false;\r\n            }\r\n        });\r\n\r\n        if(Number.isNaN(Number.parseFloat(car.miles))) {\r\n            this.errors.push(new DataError(`invalid field ${car.miles}`, car));\r\n            console.log(this.errors[0].message);\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    getCarByLicense(license) {\r\n        return this.cars.filter(car => car.license === license);\r\n    }\r\n}","import {Car} from './classes/car.js';\r\nimport {Drone} from './classes/drone.js';\r\nimport {getData} from './fleet-data.js';\r\nimport {FleetDataService} from './services/fleet-data-service.js';\r\nlet car = new Car();\r\nlet drone = new Drone();\r\n\r\nconsole.log('dupa');\r\n\r\n\r\nlet dataService = new FleetDataService();\r\n// getData().then(data => dataService.loadData(data));\r\n// dataService.loadData(\"data\")\r\n// console.log(dataService.cars); //empty array\r\n// console.log(dataService.getCarByLicense())\r\n\r\n// Options: --async-functions \r\nasync function vehiclesData() {\r\n    getData().then(data => dataService.loadData(data));\r\n    const request = getData();\r\n    const data = await request;\r\n    console.log(data);\r\n\r\n    console.log(dataService.cars);\r\n    const myCar = dataService.getCarByLicense(\"AT2000\");\r\n    console.log(myCar);\r\n\r\n\r\n   \r\n   \r\n};\r\n\r\nvehiclesData();\r\n"]}